<template>
  <div class="flex flex-col space-y-4 px-2">
    <!-- Header Controls -->
    <div class="flex justify-between items-center">
      <h3 class="text-xl font-bold text-white">{{ title }}</h3>
      <button
        @click="downloadCSV"
        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-1 rounded shadow"
      >
        ⬇ Download CSV
      </button>
    </div>

    <!-- Table Container -->
    <div ref="tableContainer" class="w-full tabulator-container" />
  </div>
</template>

<script>
import { TabulatorFull as Tabulator } from "tabulator-tables";
import "tabulator-tables/dist/css/tabulator.min.css";

export default {
  name: "TabulatorTable",
  props: {
    data: Array,
    columns: Array,
    title: {
      type: String,
      default: "Alerts Table",
    },
  },
  data() {
    return {
      table: null,
    };
  },
  mounted() {
    this.initTable();
  },
  methods: {
    initTable() {
      this.table = new Tabulator(this.$refs.tableContainer, {
        data: this.data,
        columns: this.columns,
        layout: "fitColumns", // fitData, fitDataFill
        pagination: "local",
        paginationSize: 5,
        paginationSizeSelector: [5, 8, 10, 20],
        placeholder: "No alerts available",
        cellEdited: (cell) => {
          const rowData = cell.getData();
          const field = cell.getField();

          // Only persist justification edits
          if (field === "justification") {
            const { title, region, severity, justification } = rowData;

            fetch("https://your-api.com/api/save-justification/", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                title,
                region,
                severity,
                justification,
              }),
            })
              .then((res) => res.json())
              .then((resp) => console.log("✅ Justification saved:", resp))
              .catch((err) => console.error("❌ Save failed:", err));
          }
        },
      });
    },
    downloadCSV() {
      if (this.table) {
        this.table.download("csv", "alerts.csv");
      }
    },
  },
  watch: {
    data(newData) {
      if (this.table) {
        this.table.replaceData(newData);
      }
    },
  },
};
</script>
